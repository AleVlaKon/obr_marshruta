import openpyxl as xl


# workbook = xl.load_workbook('Ведомость.xlsx', data_only=True)

# sheet_1 = workbook['3.1']

# rng = sheet_1['F12':'M' + str(sheet_1.max_column)]

# rng_filter = []

# for i in rng:
#     for j in i:
#         if j.value not in [None, 'None']:
#             rng_filter.append(j.value) 

# print(rng_filter)

def vivodi_v_otchet(sheet_1):
    codes_of_defects = {
        'поперечные трещины': ['пт2040','пт1020', 'пт810', 'пт68', 'пт46', 'пт46', 'пт34', 'пт23', 'пт12',],
        'продольные трещины': ['по', 'пб', ],
        'сетка трещин': ['одкр', 'одмел', 'гсет', 'мс30', 'мс60', 'мс90', ],    
        'выбоины': ['одвыб', 'отвыб', 'рвыб', 'чвыб',],
        'выбоины на песчано-гравийном покрытии': ['пг2040', 'пг1020', 'пг810', 'пг68','пг46',],
        'выбоины на гравийном покрытии': ['гр2040', 'гр1020', 'гр810', 'гр68','гр46',],
        'выбоины на щебеночном покрытии': ['щ2040', 'щ1020', 'щ810', 'щ68','щ46',],
        'колея': ['кол10', 'кол20', 'кол30', 'кол40', 'кол50', 'кол70', 'кол80',],
    }


    # frequency_of_defects = {}

    # frequency_of_defects = {
    #     'поперечные трещины': 0,
    #     'продольные трещины': 0,
    #     'сетка трещин': 0,
    #     'выбоины': 0,
    #     'выбоины ПГС': 0,
    #     'выбоины гравийное': 0,
    #     'выбоины щебеночное': 0,
    #     'колея': 0,
    #     'общее количество': 0,
    # }

    # for defs in rng_filter:
    #     for k in codes_of_defects.keys():
    #         if defs in codes_of_defects[k]:
    #             frequency_of_defects[k] = frequency_of_defects.get(k, 0) + 1
    # frequency_of_defects['общее количество'] = len(rng_filter)


    # print(frequency_of_defects)

    longs_of_defects = {}
    prot_all = 0
    for row_i in range(12, len(sheet_1['A'])):              # общая проятяженность маршрута
        if sheet_1.cell(row=row_i, column=1).value not in [None, 'None']:
            prot_all += sheet_1.cell(row = row_i, column=3).value



    for row_i in range(12, len(sheet_1['A'])):     # делает словарь с протяженностью каждого типа дефектов
        for col_i in range(6, 14):
            for k in codes_of_defects.keys():
                if sheet_1.cell(row=row_i, column=1).value not in [None, 'None']:
                    prot = sheet_1.cell(row = row_i, column=3).value
                    defect = sheet_1.cell(row = row_i, column=col_i).value
                    if defect in codes_of_defects[k]:
                        longs_of_defects[k] = longs_of_defects.get(k, 0) + prot

    # print(longs_of_defects)

    # prot_all = sum(longs_of_defects.values())

    # print(prot_all)


    main_types_of_defects = []

    for k, v in longs_of_defects.items():           # Делает список с основными видами дефектов (дефект основной, если встречается более чем на 15% протяженности)
        if v / prot_all > 0.15:
            main_types_of_defects.append(k)

    # print(main_types_of_defects)


    vivody_of_defects = {
        'поперечные трещины': (
'Согласно дефектной ведомости можно сделать следующий вывод: \
возникновения деформаций можно отнести к неудовлетворительной деформативной способности покрытия и малой сопротивляемости его напряжениям, \
возникающим от изменения температуры. ',
'неудовлетворительной деформативной способности покрытия и малой сопротивляемости его напряжениям, \
возникающим от изменения температуры'
                                ),
        'продольные трещины': (
'Согласно дефектной ведомости можно сделать следующий вывод: возникновения деформаций можно отнести к дефектам при устройстве продольных швов.', 
'дефектам при устройстве продольных швов', ),
        'сетка трещин': (
'Согласно дефектной ведомости можно сделать следующий вывод: возникновения деформаций можно отнести к локальной недостаточности прочности дорожной конструкции.', 
'локальной недостаточности прочности дорожной конструкции', ),
        'выбоины': (
'Согласно дефектной ведомости можно сделать следующий вывод: возникновения деформаций можно отнести к недостаточному сопротивлению покрытия касательным усилиям \
от транспортных средств, выбивающих и выдергивающих каменные частицы, непрочное сцепление вяжущего с каменным материалом: дефекты укатки покрытия', 
'недостаточному сопротивлению покрытия касательным усилиям \
от транспортных средств, выбивающих и выдергивающих каменные частицы, непрочное сцепление вяжущего с каменным материалом: дефекты укатки покрытия', ),
        'выбоины на песчано-гравийном покрытии': (
'Согласно дефектной ведомости можно сделать следующий вывод: возникновения деформаций на песчано-гравийном покрытии можно отнести к недостаточному сопротивлению \
покрытия касательным усилиям от транспортных средств, выбивающих и выдергивающих каменные частицы, недостаточное содержание гравия', 
'недостаточному сопротивлению песчано-гравийного\
покрытия касательным усилиям от транспортных средств, выбивающих и выдергивающих каменные частицы, недостаточное содержание гравия', ),
        'выбоины на гравийном покрытии': (
'Согласно дефектной ведомости можно сделать следующий вывод: возникновения деформаций на гравийном покрытии можно отнести к недостаточному сопротивлению \
покрытия касательным усилиям от транспортных средств, выбивающих и выдергивающих каменные частицы', 
'недостаточному сопротивлению гравийного\
покрытия касательным усилиям от транспортных средств, выбивающих и выдергивающих каменные частицы', ),
        'выбоины на щебеночном покрытии': (
'Согласно дефектной ведомости можно сделать следующий вывод: возникновения деформаций на щебеночном покрытии можно отнести к недостаточному сопротивлению \
покрытия касательным усилиям от транспортных средств, выбивающих и выдергивающих каменные частицы', 
'недостаточному сопротивлению щебеночного\
покрытия касательным усилиям от транспортных средств, выбивающих и выдергивающих каменные частицы', ),
        'колея': (
'Согласно дефектной ведомости можно сделать следующий вывод: \
возникновения деформаций можно отнести к недостаточной устойчивости асфальтобетона в отношении необратимых деформаций, \
низкая марка по истираемости у материалов покрытия. ', 
'недостаточная устойчивости асфальтобетона в отношении необратимых деформаций, а также \
низкая имарка по истираемости у материалов покрытия', ),
    }

    if len(main_types_of_defects) == 0:
        vivod_main = ''                         
    elif len(main_types_of_defects) == 1:                     # Если основной тип дефекта один
        vivod_main = vivody_of_defects[main_types_of_defects[0]][0]
    elif len(main_types_of_defects) == 2:                   # Если основных типов дефекта два
        vivod_main = f'Согласно дефектной ведомости можно сделать следующие выводы: возникновения деформаций можно отнести к {vivody_of_defects[main_types_of_defects[0]][1]}, а также {vivody_of_defects[main_types_of_defects[1]][1]}.'
    else:                                                   # Если основных типов дефекта три и больше
        vivod_main = 'Согласно дефектной ведомости можно сделать следующие выводы: возникновения деформаций можно отнести к '
        for i in main_types_of_defects[:-1]:
            vivod_main += vivody_of_defects[i][1]
            vivod_main += ', '
        vivod_main += f'а также {vivody_of_defects[main_types_of_defects[-1]][1]}.'

    # print(vivod_main)
    if main_types_of_defects:
        osn_vid_defectov = f'Основные виды дефектов – ' + ', '.join(main_types_of_defects) + '.'
    else:
        osn_vid_defectov = ''
    
    # print(osn_vid_defectov)
    return vivod_main, osn_vid_defectov 


# print(vivodi_v_otchet(sheet_1))

